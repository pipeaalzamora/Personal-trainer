// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String?
  verified  Boolean  @default(false)
  verificationToken String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders    Order[]
}

model Course {
  id          String   @id
  title       String
  description String
  price       Float
  duration    String
  image       String
  category    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  materials   CourseMaterial[]
  orderItems  OrderItem[]
}

model CourseMaterial {
  id          String   @id @default(uuid())
  courseId    String
  title       String
  description String?
  fileUrl     String
  fileType    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  course      Course   @relation(fields: [courseId], references: [id])
}

model Order {
  id           String     @id @default(uuid())
  userId       String
  totalAmount  Float
  status       String     @default("PENDING") // PENDING, COMPLETED, FAILED, REFUNDED
  buyOrder     String     @unique
  sessionId    String
  transactionToken String?
  authorizationCode String?
  paymentType  String?
  cardNumber   String?
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  user         User       @relation(fields: [userId], references: [id])
  items        OrderItem[]
}

model OrderItem {
  id        String   @id @default(uuid())
  orderId   String
  courseId  String
  price     Float
  order     Order    @relation(fields: [orderId], references: [id])
  course    Course   @relation(fields: [courseId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
